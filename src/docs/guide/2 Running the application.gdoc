h4. Building the jar

The first step is to run the [build-standalone|Scripts] script, e.g.

{code:java}
grails prod build-standalone
{code}

or

{code:java}
grails -Dgrails.env=demo build-standalone our_cool_demo.jar
{code}

If you pass the \-\-jetty flag the embedded server will be Jetty instead of the default Tomcat, for example

{code:java}
grails prod build-standalone --jetty
{code}

or

{code:java}
grails -Dgrails.env=demo build-standalone our_cool_demo.jar --jetty
{code}

You can also change the default embedded server to Jetty by placing the
following in your Config.groovy:

{code}
grails.plugins.standalone.useJetty = true
{/code}

If you've set jetty to the default, you can force a tomcat build later with the \-\-tomcat flag:

{code:java}
grails build-standalone --tomcat
{/code}


h4. Running the server

As long as the target machine has Java 5 or higher available, all you need to do next is run

{code:java}
java -jar /path/to/jar_name.jar
{code}

There are several arguments you can pass to customize how the application runs, using @name=value@ syntax:
# @context@, the context name; if not specified it defaults to "" (the "root" context)
# @host@, the host name; if not specified it defaults to "localhost"
# @port@, the HTTP port; if not specified it defaults to 8080
# @httpsPort@, the HTTPS port; there is no default for this, but if specified you can also specify the keystore path and password
# @keystorePath@ or @javax.net.ssl.keyStore@, the SSL keystore path; if not specified a temporary keystore will be generated
# @keystorePassword@ or @javax.net.ssl.keyStorePassword@, the SSL keystore password; required if an existing keystore path is specified
# @truststorePath@ or @javax.net.ssl.trustStore@, the SSL truststore path
# @trustStorePassword@ or @javax.net.ssl.trustStorePassword@, the SSL truststore password; required if an existing truststore path is specified
# @enableClientAuth@, whether to enable client auth, defaults to false
# @workDir@, the working directory where the war file is extracted, defaults to the system temp directory
# @enableCompression@, whether to enable compression (Tomcat only)
# @compressableMimeTypes@, a comma separated list of MIME types for which HTTP compression may be used; defaults to the Tomcat defaults, @"text/html,text/xml,text/plain"@
# @sessionTimeout@, the session timeout in minutes; defaults to 30
# @nio@ or @tomcat.nio@, whether to use NIO; defaults to true

In addition, if you specify a value that is the name of a system property (e.g. 'home.dir'), the system property value will be used.

For example running

{code:java}
java -jar /path/to/jar_name.jar
{code}

will start a server at @http://localhost:8080/@ and

{code:java}
java -jar /path/to/jar_name.jar context=cool_demo port=9000
{code}

will start a server at @http://localhost:9000/cool_demo@

{code:java}
java -jar /path/to/jar_name.jar context=cool_demo port=8080 httpsPort=8443
{code}

will start a server at @http://localhost:8080/cool_demo@ and will also support SSL at @https://localhost:8443/cool_demo@
